--- a/mkspecs/common/clang.conf
+++ b/mkspecs/common/clang.conf
@@ -16,7 +16,7 @@ QMAKE_LINK_SHLIB        = $$QMAKE_CXX
 CONFIG                 += clang_pch_style
 QMAKE_PCH_OUTPUT_EXT    = .pch
 
-QMAKE_CFLAGS_ISYSTEM             = -isystem
+QMAKE_CFLAGS_ISYSTEM             = 
 QMAKE_CFLAGS_PRECOMPILE          = -x c-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
 QMAKE_CFLAGS_USE_PRECOMPILE      = -Xclang -include-pch -Xclang ${QMAKE_PCH_OUTPUT}
 QMAKE_CFLAGS_LTCG                = -flto
--- a/mkspecs/common/gcc-base.conf
+++ b/mkspecs/common/gcc-base.conf
@@ -46,7 +46,7 @@ QMAKE_CFLAGS_DEBUG         += -g
 QMAKE_CFLAGS_SHLIB         += $$QMAKE_CFLAGS_PIC
 QMAKE_CFLAGS_STATIC_LIB    += $$QMAKE_CFLAGS_PIC
 QMAKE_CFLAGS_APP           += $$QMAKE_CFLAGS_PIC
-QMAKE_CFLAGS_ISYSTEM        = -isystem
+QMAKE_CFLAGS_ISYSTEM        = 
 QMAKE_CFLAGS_YACC          += -Wno-unused -Wno-parentheses
 QMAKE_CFLAGS_HIDESYMS      += -fvisibility=hidden
 QMAKE_CFLAGS_EXCEPTIONS_OFF += -fno-exceptions
--- a/mkspecs/features/qt.prf
+++ b/mkspecs/features/qt.prf
@@ -9,7 +9,7 @@ win32 {
    qtConfig(shared) {
       # this variable is read by qmake in qmake/generators/win32/msvc_vcproj.cpp
       # function VcprojGenerator::initDeploymentTool()
-      QMAKE_DLL_PATHS += $$[QT_INSTALL_BINS/get]
+      QMAKE_DLL_PATHS += $$[QT_INSTALL_BINS]
    }
 }
 CONFIG(release, debug|release):DEFINES += QT_NO_DEBUG
@@ -147,7 +147,7 @@ import_plugins:qtConfig(static) {
         !isEmpty(plug_type) {
             plug_path = $$eval(QT_PLUGIN.$${plug}.PATH)
             isEmpty(plug_path): \
-                plug_path = $$[QT_INSTALL_PLUGINS/get]
+                plug_path = $$[QT_INSTALL_PLUGINS]
             LIBS += -L$$plug_path/$$plug_type
         }
         LIBS += -l$${plug}$$qtPlatformTargetSuffix()
@@ -298,8 +298,8 @@ for(ever) {
 # static builds: link qml import plugins into the target.
 contains(all_qt_module_deps, qml): \
         qtConfig(static):import_plugins:!host_build:!no_import_scan {
-    exists($$[QT_INSTALL_QML/get]): \
-        QMLPATHS *= $$[QT_INSTALL_QML/get]
+    exists($$[QT_INSTALL_QML]): \
+        QMLPATHS *= $$[QT_INSTALL_QML]
 
     # run qmlimportscanner
     qtPrepareTool(QMLIMPORTSCANNER, qmlimportscanner, , system)
--- a/mkspecs/features/toolchain.prf
+++ b/mkspecs/features/toolchain.prf
@@ -152,8 +152,8 @@ isEmpty($${target_prefix}.INCDIRS) {
     }
 
     unix {
-        isEmpty(QMAKE_DEFAULT_INCDIRS): QMAKE_DEFAULT_INCDIRS = /usr/include /usr/local/include
-        isEmpty(QMAKE_DEFAULT_LIBDIRS): QMAKE_DEFAULT_LIBDIRS = /lib /usr/lib
+        isEmpty(QMAKE_DEFAULT_INCDIRS) & !cross_compile: QMAKE_DEFAULT_INCDIRS = /usr/include /usr/local/include
+        isEmpty(QMAKE_DEFAULT_LIBDIRS) & !cross_compile: QMAKE_DEFAULT_LIBDIRS = /lib /usr/lib
     }
 
     cache($${target_prefix}.INCDIRS, set stash, QMAKE_DEFAULT_INCDIRS)
